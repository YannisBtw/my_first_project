import random


def apply_emojify_filter(text):
    words = text.split()
    emojis = ["üòÄ", "üòÇ", "üòé", "üöÄ", "‚ù§Ô∏è", "üåà", "üíñ", "üíó", "ü•∞", "üíû"]
    result = words[0]
    for word in words[1:]:
        result += " " + random.choice(emojis) + " " + word
    return result


def apply_word_reverse_filter(text):
    words = text
    result = ""
    for index in range(len(words)):
        result += words[len(words) - 1 - index]
    return result


def apply_sentence_reverse_filter(text):
    words = text.split()
    result = ""
    for index in range(len(words)):
        result += " " + words[len(words) - 1 - index]
    return result


def apply_invert_filter(text):
    inverted_text = ""
    for char in text:
        if char.isalpha():
            if char.isupper():
                inverted_text += char.lower()
            else:
                inverted_text += char.upper()
        else:
            inverted_text += char
    return inverted_text


filters = {
    1: {
        "name": "Emojify Filter",
        "description": "–≠—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä –¥–æ–±–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–µ —Å–º–∞–π–ª–∏–∫–∏ –º–µ–∂–¥—É —Å–ª–æ–≤–∞–º–∏",
        "function": apply_emojify_filter,
    },
    2: {
        "name": "Word Reverse Filter",
        "description": "–≠—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –≤ —Ç–µ–∫—Å—Ç–µ.",
        "function": apply_word_reverse_filter,
    },
    3: {
        "name": "Sentence Reverse Filter",
        "description": "–≠—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä –º–µ–Ω—è–µ—Ç –º–µ—Å—Ç–∞–º–∏ —Å–ª–æ–≤–∞ –≤ —Ç–µ–∫—Å—Ç–µ.",
        "function": apply_sentence_reverse_filter,

    },
    4: {
        "name": "Invert Filter",
        "description": "–≠—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä –∏–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä –±—É–∫–≤ –≤ —Ç–µ–∫—Å—Ç–µ.",
        "function": apply_invert_filter,
    }
}
while True:
    print("–ú–µ–Ω—é —Ñ–∏–ª—å—Ç—Ä–æ–≤:")
    for key, filter_data in filters.items():
        print(f"{key}: {filter_data['name']}")

    print("0: –í—ã—Ö–æ–¥")

    choice = input("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å—Ç—Ä (–∏–ª–∏ 0 –¥–ª—è –≤—ã—Ö–æ–¥–∞): ")

    if choice == "0":
        print("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
        break

    if choice.isdigit():
        choice = int(choice)
        if choice in filters:
            filter_data = filters[choice]
            print(filter_data["name"] + ":")
            print(filter_data["description"])
            apply_filter = input("–ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä –∫ —Ç–µ–∫—Å—Ç—É (–î–∞/–ù–µ—Ç)? ").lower()
            if apply_filter == "–¥–∞":
                text = input("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: ")
                result = filter_data["function"](text)
                print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
            elif apply_filter == "–Ω–µ—Ç":
                continue
            else:
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é.")
        else:
            print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä —Ñ–∏–ª—å—Ç—Ä–∞.")
    else:
        print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∏–ª—å—Ç—Ä–∞.")
